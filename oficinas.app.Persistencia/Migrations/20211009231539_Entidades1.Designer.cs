// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using oficinas.app.Persistencia;

namespace oficinas.app.Persistencia.Migrations
{
    [DbContext(typeof(AppContext))]
    [Migration("20211009231539_Entidades1")]
    partial class Entidades1
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("oficinas.app.Dominio.EstadoSalud", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<bool>("Diarrea")
                        .HasColumnType("bit");

                    b.Property<bool>("Dolor_de_cabeza")
                        .HasColumnType("bit");

                    b.Property<DateTime>("Fecha_final")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Fecha_inicial")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Fiebre")
                        .HasColumnType("bit");

                    b.Property<bool>("Perdida_Gusto")
                        .HasColumnType("bit");

                    b.Property<bool>("Perdida_Ofalto")
                        .HasColumnType("bit");

                    b.Property<bool>("Tos")
                        .HasColumnType("bit");

                    b.Property<bool>("Vomito")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("Covid1");
                });

            modelBuilder.Entity("oficinas.app.Dominio.Oficina", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("Aforo")
                        .HasColumnType("int");

                    b.Property<int>("Cant_Oficinas_Disponibles")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Numero_personas")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Oficinas");
                });

            modelBuilder.Entity("oficinas.app.Dominio.Persona", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Apellidos")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Celular")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Correo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Edad")
                        .HasColumnType("int");

                    b.Property<string>("Estado_covid")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("HorasLaboradas")
                        .HasColumnType("int");

                    b.Property<int>("Identificacion")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Personas");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Persona");
                });

            modelBuilder.Entity("oficinas.app.Dominio.Sede", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Direccion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Sedes");
                });

            modelBuilder.Entity("oficinas.app.Dominio.Asesor", b =>
                {
                    b.HasBaseType("oficinas.app.Dominio.Persona");

                    b.Property<string>("Oficinas_visitadas")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Asesor_Oficinas_visitadas");

                    b.HasDiscriminator().HasValue("Asesor");
                });

            modelBuilder.Entity("oficinas.app.Dominio.Gobernador", b =>
                {
                    b.HasBaseType("oficinas.app.Dominio.Persona");

                    b.Property<string>("Oficinas_visitadas")
                        .HasColumnType("nvarchar(max)");

                    b.HasDiscriminator().HasValue("Gobernador");
                });

            modelBuilder.Entity("oficinas.app.Dominio.Proveedor", b =>
                {
                    b.HasBaseType("oficinas.app.Dominio.Persona");

                    b.Property<string>("Servicio_realizado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Unidad_visitada")
                        .HasColumnType("nvarchar(max)");

                    b.HasDiscriminator().HasValue("Proveedor");
                });

            modelBuilder.Entity("oficinas.app.Dominio.Secretario", b =>
                {
                    b.HasBaseType("oficinas.app.Dominio.Persona");

                    b.Property<string>("Despacho")
                        .HasColumnType("nvarchar(max)");

                    b.HasDiscriminator().HasValue("Secretario");
                });
#pragma warning restore 612, 618
        }
    }
}
